{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5556432f",
   "metadata": {},
   "source": [
    "# Tutorial 4: Getting Result Values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8899e69a",
   "metadata": {},
   "source": [
    "This Tutorial demonstrates how to get result values of objects based on their tk."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a66e1ada",
   "metadata": {},
   "source": [
    "The database used for this Tutorial is based on [Network1](https://3sconsult.github.io/sir3stoolkit/examples.html#network-1)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2d40c36",
   "metadata": {},
   "source": [
    "# Toolkit Release"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7fb5a07b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#pip install sir3stoolkit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7887be8d",
   "metadata": {},
   "source": [
    "# Imports"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "529d4ff7",
   "metadata": {},
   "source": [
    "## DLL References"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bbfb80b5",
   "metadata": {},
   "source": [
    "The Toolkit requires the Sir3S_Toolkit.dll included in SIR 3S installations (from Quebec and Up). Furthermore the Sir3S_Repository.Interfaces.dll is required to input native SIR 3S datatypes into some Toolkit functions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "6ddc5056",
   "metadata": {},
   "outputs": [],
   "source": [
    "import clr as clr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "0f91d207",
   "metadata": {},
   "outputs": [],
   "source": [
    "SIR3S_SIRGRAF_DIR = r\"C:\\3S\\SIR 3S Entwicklung\\SirGraf-90-15-00-11_Quebec_x64\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "ae3916b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "clr.AddReference(SIR3S_SIRGRAF_DIR+r\"\\Sir3S_Repository.Interfaces\")\n",
    "import Sir3S_Repository.Interfaces as Interfaces"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d5f592be",
   "metadata": {},
   "outputs": [],
   "source": [
    "clr.AddReference(SIR3S_SIRGRAF_DIR+r\"\\Sir3S_Toolkit\")\n",
    "import Sir3S_Toolkit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13085702",
   "metadata": {},
   "source": [
    "## PythonWrapperToolkit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "48372080",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sir3stoolkit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e12d61e9",
   "metadata": {},
   "source": [
    "The core of sir3stoolkit is a Python Wrapper around C#, that can be used to read, write, etc. to a SIR 3S Model. In the future pure python subpackages may be added."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f1baf699",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sir3stoolkit.core import wrapper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "89da1276",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<module 'sir3stoolkit' from 'C:\\\\Users\\\\jablonski\\\\3S\\\\sir3stoolkit\\\\src\\\\sir3stoolkit\\\\__init__.py'>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sir3stoolkit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d982834",
   "metadata": {},
   "source": [
    "The [wrapper package](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.Initialize_Toolkit) has to be initialized with reference to a SIR Graf installation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "817b0ebf",
   "metadata": {},
   "outputs": [],
   "source": [
    "wrapper.Initialize_Toolkit(SIR3S_SIRGRAF_DIR)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0352dd43",
   "metadata": {},
   "source": [
    "# Initialization"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e14ffe06",
   "metadata": {},
   "source": [
    "Toolkit contains two classes: [SIR3S_Model](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model)(model and data) and [SIR3S_View](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_View)(depiction in SIR Graf). All Toolkit functionality is accessed via the methods of these classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "7e40a5af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Initialization complete\n"
     ]
    }
   ],
   "source": [
    "s3s = wrapper.SIR3S_Model()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "3770c93f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Initialization complete\n"
     ]
    }
   ],
   "source": [
    "s3s_view = wrapper.SIR3S_View()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34309a14",
   "metadata": {},
   "source": [
    "# Open Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "0918738e",
   "metadata": {},
   "outputs": [],
   "source": [
    "dbFilePath=r\"Toolkit_Tutorial4_Model.db3\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "e984b61e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model is open for further operation\n"
     ]
    }
   ],
   "source": [
    "s3s.OpenModel(dbName=dbFilePath, \n",
    "                            providerType=Interfaces.SirDBProviderType.SQLite, \n",
    "                            Mid=\"M-1-0-1\", \n",
    "                            saveCurrentlyOpenModel=False, \n",
    "                            namedInstance=\"\", \n",
    "                            userID=\"\", \n",
    "                            password=\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2490549",
   "metadata": {},
   "source": [
    "Now the Model has been opened the previous one was close without saving it. All Toolkit commands now apply to this model until another one is opened."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "8e3adb92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Water\n"
     ]
    }
   ],
   "source": [
    "print(s3s.GetNetworkType()) # to check that the correct model is responsive, model we are trying to open was createdd with type District Heating"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "315aeba3",
   "metadata": {},
   "source": [
    "# Get Result Values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d88a7a2",
   "metadata": {},
   "source": [
    "Our goal is to find how the pressure value in Node10 changes from 11:08 to 11:11."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aed94ff7",
   "metadata": {},
   "source": [
    "The [GetResultValue()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetResultValue) function requires a tk to the object and the internal SIR 3S attribute name of the value we want to obtain. This guide will walk you through how to obtain those."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a2c775d",
   "metadata": {},
   "source": [
    "## Interfaces.Sir3SObjectTypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b9acda0",
   "metadata": {},
   "source": [
    "As we did with non-result values, we need to obtain the internal SIR 3S element types to later pass to our function for obtaining the attribute names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "c28fc2d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "node_type=Interfaces.Sir3SObjectTypes.Node"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "e2b32739",
   "metadata": {},
   "outputs": [],
   "source": [
    "pipe_type=Interfaces.Sir3SObjectTypes.Pipe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "6c3df7e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "pump_type = Interfaces.Sir3SObjectTypes.Pump"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "3ddd7bb7",
   "metadata": {},
   "outputs": [],
   "source": [
    "container_type = Interfaces.Sir3SObjectTypes.OpenContainer"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85411a73",
   "metadata": {},
   "source": [
    "## Find Node of interest"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48a6dfab",
   "metadata": {},
   "source": [
    "As we did with non-result values, we obtain the tks of the nodes and pipes in this model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cf93b7d",
   "metadata": {},
   "source": [
    "We use [GetTksofElementType()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetTksofElementType) to create a list of all node tks in the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "30945bd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "nodes=s3s.GetTksofElementType(node_type)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "c0911db9",
   "metadata": {},
   "outputs": [],
   "source": [
    "for node in nodes:\n",
    "    if(s3s.GetValue(node, 'Name')[0]=='Node10'):\n",
    "        tk_of_interest=s3s.GetValue(node, 'tk')[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "2856f89c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5452027739517825954\n"
     ]
    }
   ],
   "source": [
    "print(tk_of_interest)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c67fcc0",
   "metadata": {},
   "source": [
    "## GetResultProperties_from_elementTypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33f66226",
   "metadata": {},
   "source": [
    "Similar to non-result values, we use [GetResultProperties_from_elementTypes()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetResultProperties_from_elementType) to create a list of all result properties of the different objects that exist in our model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "6317c6d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "node_result_properties=s3s.GetResultProperties_from_elementType(node_type, False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "195e7c66",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['BCIND', 'BCIND_CALC', 'BCIND_FLOW', 'BCIND_MODEL', 'BCIND_SOURCE', 'BCIND_TYPE', 'CHLORID', 'CP', 'DP', 'DPH', 'DYNVISKO', 'EH', 'EISENFILT', 'EISENGES', 'ESQUELLSP', 'FITT_ANGLE', 'FITT_BASTYPE', 'FITT_DP1', 'FITT_DP2', 'FITT_DP3', 'FITT_STATE', 'FITT_SUBTYPE', 'FITT_VBTYPE1', 'FITT_VBTYPE2', 'FITT_VBTYPE3', 'FITT_ZETA1', 'FITT_ZETA2', 'FITT_ZETA3', 'FSTF_NAME', 'GMIX_NAME', 'H', 'HI', 'HMAX_INST', 'HMIN_INST', 'HS', 'IAKTIV', 'INDUV', 'K', 'KP', 'KT', 'LEITFAEH', 'LFAKTAKT', 'LFKT', 'M', 'MAINELEMENT', 'MN', 'P', 'PDAMPF', 'PH', 'PH_EIN', 'PH_MIN', 'PHMINMAXDIF', 'PHWERT', 'PMAX_INST', 'PMIN_INST', 'PVAR', 'Q2', 'QM', 'QMABS', 'QVAR', 'RHO', 'RHON', 'RHONQUAL', 'SULFAT', 'T', 'TE', 'TEMP', 'TMAX_INST', 'TMIN_INST', 'TTR', 'VOLD', 'WALTER', 'ZHKNR']\n"
     ]
    }
   ],
   "source": [
    "print(node_result_properties)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "27f7d180",
   "metadata": {},
   "outputs": [],
   "source": [
    "pipe_result_properties=s3s.GetResultProperties_from_elementType(pipe_type, False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "54975e7c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['A', 'ACALC', 'CPI', 'CPK', 'DH', 'DP', 'DRAGRED', 'DRAKONZ', 'DSI', 'DSK', 'DTTR', 'DWVERL', 'DWVERLABS', 'ETAAV', 'FS', 'HR', 'HVEC', 'IAKTIV', 'IRTRENN', 'JV', 'JV2', 'LAMBDA', 'LECKEINAUS', 'LECKMENGE', 'LECKORT', 'LINEPACK', 'LINEPACKGEOM', 'LINEPACKRATE', 'MAINELEMENT', 'MAV', 'MI', 'MK', 'MKOND', 'MMAX_INST', 'MMIN_INST', 'MVEC', 'MVECMAX_INST', 'MVECMIN_INST', 'PAV', 'PDAMPF', 'PHR', 'PHVEC', 'PMAX', 'PMIN', 'PR', 'PVEC', 'PVECMAX_INST', 'PVECMIN_INST', 'QI2', 'QK2', 'QMAV', 'QMI', 'QMK', 'QMMAX_INST', 'QMMIN_INST', 'QMVEC', 'QSVB', 'RHOAV', 'RHOI', 'RHOK', 'RHOVEC', 'SVEC', 'TAV', 'TI', 'TK', 'TTRVEC', 'TVEC', 'TVECMAX_INST', 'TVECMIN_INST', 'VAV', 'VI', 'VK', 'VMAX_INST', 'VMIN_INST', 'VOLDA', 'WALTERI', 'WALTERK', 'WVL', 'ZAUS', 'ZEIN', 'ZHKNR', 'ZVEC']\n"
     ]
    }
   ],
   "source": [
    "print(pipe_result_properties)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "1ee52372",
   "metadata": {},
   "outputs": [],
   "source": [
    "pump_result_properties=s3s.GetResultProperties_from_elementType(pump_type, False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "b8e486c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['BK', 'DH', 'DP', 'DPH', 'EINAUS', 'ETA', 'ETAW', 'IAKTIV', 'IND', 'M', 'MAINELEMENT', 'MOM', 'N', 'NMINMAXDIF', 'NPSH', 'NPSHDIF', 'NPSHMIN', 'NSOLLTURB', 'PA', 'PE', 'PE_RUECK', 'PHSOLL', 'PP', 'PUMD', 'QM', 'QMSOLL', 'QMSOLLTURB', 'QN0', 'RCPU_IND', 'RCPU_W', 'RCPU_X', 'RCPU_XD', 'RHO', 'STOERUNG', 'SWVT']\n"
     ]
    }
   ],
   "source": [
    "print(pump_result_properties)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "ad5e272d",
   "metadata": {},
   "outputs": [],
   "source": [
    "tank_result_properties=s3s.GetResultProperties_from_elementType(pump_type, False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "756e3f34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['BK', 'DH', 'DP', 'DPH', 'EINAUS', 'ETA', 'ETAW', 'IAKTIV', 'IND', 'M', 'MAINELEMENT', 'MOM', 'N', 'NMINMAXDIF', 'NPSH', 'NPSHDIF', 'NPSHMIN', 'NSOLLTURB', 'PA', 'PE', 'PE_RUECK', 'PHSOLL', 'PP', 'PUMD', 'QM', 'QMSOLL', 'QMSOLLTURB', 'QN0', 'RCPU_IND', 'RCPU_W', 'RCPU_X', 'RCPU_XD', 'RHO', 'STOERUNG', 'SWVT']\n"
     ]
    }
   ],
   "source": [
    "print(tank_result_properties)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d9f2194",
   "metadata": {},
   "source": [
    "## GetResultProperties_from_elementKey"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2391a428",
   "metadata": {},
   "source": [
    "Alternatively, we can use [GetResultProperties_from_elementKey()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetResultProperties_from_elementKey) to create a list of all result properties of one one specific object based on its tk."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "eba499b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "node_result_properties_alternative=s3s.GetResultProperties_from_elementKey(nodes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "b629095c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['BCIND', 'FITT_BASTYPE', 'FITT_DP1', 'FITT_DP2', 'FITT_DP3', 'FITT_STATE', 'H', 'IAKTIV', 'INDUV', 'LFAKTAKT', 'P', 'PDAMPF', 'PH', 'PH_EIN', 'PH_MIN', 'PHMINMAXDIF', 'QM', 'RHO', 'T', 'TTR', 'VOLD']\n"
     ]
    }
   ],
   "source": [
    "print(node_result_properties_alternative)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92eeb97d",
   "metadata": {},
   "source": [
    "## Timestamps"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6adae36",
   "metadata": {},
   "source": [
    "The [GetResultValue()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetResultValue) function gives the value corresponding to the currentley selected timestamp for the model. You can check the current timestamp using [GetCurrentTimeStamp()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetCurrentTimeStamp) and change it using [SetCurrentTimeStamp()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.SetCurrentTimeStamp)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "dd8a66ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2025-07-18 11:07:35.000 +02:00'"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3s.GetCurrentTimeStamp()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1ff44c1",
   "metadata": {},
   "source": [
    "We can check what Timestamps are available in this model using [GetTimeStamps()](https://3sconsult.github.io/sir3stoolkit/references/sir3stoolkit.core.html#sir3stoolkit.core.wrapper.SIR3S_Model.GetTimeStamps)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "fd2691b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "available_timestamps=s3s.GetTimeStamps()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "189e0aff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(['2025-07-18 11:07:35.000 +02:00', '2025-07-18 11:08:35.000 +02:00', '2025-07-18 11:09:35.000 +02:00', '2025-07-18 11:10:35.000 +02:00', '2025-07-18 11:11:35.000 +02:00', '2025-07-18 11:12:35.000 +02:00', '2025-07-18 11:13:35.000 +02:00', '2025-07-18 11:14:35.000 +02:00', '2025-07-18 11:15:35.000 +02:00', '2025-07-18 11:16:35.000 +02:00', '2025-07-18 11:17:35.000 +02:00', '2025-07-18 11:18:35.000 +02:00', '2025-07-18 11:19:35.000 +02:00', '2025-07-18 11:20:35.000 +02:00', '2025-07-18 11:21:35.000 +02:00', '2025-07-18 11:22:35.000 +02:00', '2025-07-18 11:23:35.000 +02:00', '2025-07-18 11:24:35.000 +02:00', '2025-07-18 11:25:35.000 +02:00', '2025-07-18 11:26:35.000 +02:00', '2025-07-18 11:27:35.000 +02:00', '2025-07-18 11:28:35.000 +02:00', '2025-07-18 11:29:35.000 +02:00', '2025-07-18 11:30:35.000 +02:00', '2025-07-18 11:31:35.000 +02:00', '2025-07-18 11:32:35.000 +02:00', '2025-07-18 11:33:35.000 +02:00', '2025-07-18 11:34:35.000 +02:00', '2025-07-18 11:35:35.000 +02:00', '2025-07-18 11:36:35.000 +02:00', '2025-07-18 11:37:35.000 +02:00', '2025-07-18 11:38:35.000 +02:00', '2025-07-18 11:39:35.000 +02:00', '2025-07-18 11:40:35.000 +02:00', '2025-07-18 11:41:35.000 +02:00', '2025-07-18 11:42:35.000 +02:00', '2025-07-18 11:43:35.000 +02:00', '2025-07-18 11:44:35.000 +02:00', '2025-07-18 11:45:35.000 +02:00', '2025-07-18 11:46:35.000 +02:00', '2025-07-18 11:47:35.000 +02:00', '2025-07-18 11:48:35.000 +02:00', '2025-07-18 11:49:35.000 +02:00', '2025-07-18 11:50:35.000 +02:00', '2025-07-18 11:51:35.000 +02:00', '2025-07-18 11:52:35.000 +02:00', '2025-07-18 11:53:35.000 +02:00', '2025-07-18 11:54:35.000 +02:00', '2025-07-18 11:55:35.000 +02:00', '2025-07-18 11:56:35.000 +02:00', '2025-07-18 11:57:35.000 +02:00', '2025-07-18 11:58:35.000 +02:00', '2025-07-18 11:59:35.000 +02:00', '2025-07-18 12:00:35.000 +02:00', '2025-07-18 12:01:35.000 +02:00', '2025-07-18 12:02:35.000 +02:00', '2025-07-18 12:03:35.000 +02:00', '2025-07-18 12:04:35.000 +02:00', '2025-07-18 12:05:35.000 +02:00', '2025-07-18 12:06:35.000 +02:00', '2025-07-18 12:07:35.000 +02:00', '2025-07-18 12:08:35.000 +02:00', '2025-07-18 12:09:35.000 +02:00', '2025-07-18 12:10:35.000 +02:00', '2025-07-18 12:11:35.000 +02:00', '2025-07-18 12:12:35.000 +02:00', '2025-07-18 12:13:35.000 +02:00', '2025-07-18 12:14:35.000 +02:00', '2025-07-18 12:15:35.000 +02:00', '2025-07-18 12:16:35.000 +02:00', '2025-07-18 12:17:35.000 +02:00', '2025-07-18 12:18:35.000 +02:00', '2025-07-18 12:19:35.000 +02:00', '2025-07-18 12:20:35.000 +02:00', '2025-07-18 12:21:35.000 +02:00', '2025-07-18 12:22:35.000 +02:00', '2025-07-18 12:23:35.000 +02:00', '2025-07-18 12:24:35.000 +02:00', '2025-07-18 12:25:35.000 +02:00', '2025-07-18 12:26:35.000 +02:00', '2025-07-18 12:27:35.000 +02:00', '2025-07-18 12:28:35.000 +02:00', '2025-07-18 12:29:35.000 +02:00', '2025-07-18 12:30:35.000 +02:00', '2025-07-18 12:31:35.000 +02:00', '2025-07-18 12:32:35.000 +02:00', '2025-07-18 12:33:35.000 +02:00', '2025-07-18 12:34:35.000 +02:00', '2025-07-18 12:35:35.000 +02:00', '2025-07-18 12:36:35.000 +02:00', '2025-07-18 12:37:35.000 +02:00', '2025-07-18 12:38:35.000 +02:00', '2025-07-18 12:39:35.000 +02:00', '2025-07-18 12:40:35.000 +02:00', '2025-07-18 12:41:35.000 +02:00', '2025-07-18 12:42:35.000 +02:00', '2025-07-18 12:43:35.000 +02:00', '2025-07-18 12:44:35.000 +02:00', '2025-07-18 12:45:35.000 +02:00', '2025-07-18 12:46:35.000 +02:00', '2025-07-18 12:47:35.000 +02:00', '2025-07-18 12:48:35.000 +02:00', '2025-07-18 12:49:35.000 +02:00', '2025-07-18 12:50:35.000 +02:00', '2025-07-18 12:51:35.000 +02:00', '2025-07-18 12:52:35.000 +02:00', '2025-07-18 12:53:35.000 +02:00', '2025-07-18 12:54:35.000 +02:00', '2025-07-18 12:55:35.000 +02:00', '2025-07-18 12:56:35.000 +02:00', '2025-07-18 12:57:35.000 +02:00', '2025-07-18 12:58:35.000 +02:00', '2025-07-18 12:59:35.000 +02:00', '2025-07-18 13:00:35.000 +02:00', '2025-07-18 13:01:35.000 +02:00', '2025-07-18 13:02:35.000 +02:00', '2025-07-18 13:03:35.000 +02:00', '2025-07-18 13:04:35.000 +02:00', '2025-07-18 13:05:35.000 +02:00', '2025-07-18 13:06:35.000 +02:00', '2025-07-18 13:07:35.000 +02:00', '2025-07-18 13:08:35.000 +02:00', '2025-07-18 13:09:35.000 +02:00', '2025-07-18 13:10:35.000 +02:00', '2025-07-18 13:11:35.000 +02:00', '2025-07-18 13:12:35.000 +02:00', '2025-07-18 13:13:35.000 +02:00', '2025-07-18 13:14:35.000 +02:00', '2025-07-18 13:15:35.000 +02:00', '2025-07-18 13:16:35.000 +02:00', '2025-07-18 13:17:35.000 +02:00', '2025-07-18 13:18:35.000 +02:00', '2025-07-18 13:19:35.000 +02:00', '2025-07-18 13:20:35.000 +02:00', '2025-07-18 13:21:35.000 +02:00', '2025-07-18 13:22:35.000 +02:00', '2025-07-18 13:23:35.000 +02:00', '2025-07-18 13:24:35.000 +02:00', '2025-07-18 13:25:35.000 +02:00', '2025-07-18 13:26:35.000 +02:00', '2025-07-18 13:27:35.000 +02:00', '2025-07-18 13:28:35.000 +02:00', '2025-07-18 13:29:35.000 +02:00', '2025-07-18 13:30:35.000 +02:00', '2025-07-18 13:31:35.000 +02:00', '2025-07-18 13:32:35.000 +02:00', '2025-07-18 13:33:35.000 +02:00', '2025-07-18 13:34:35.000 +02:00', '2025-07-18 13:35:35.000 +02:00', '2025-07-18 13:36:35.000 +02:00', '2025-07-18 13:37:35.000 +02:00', '2025-07-18 13:38:35.000 +02:00', '2025-07-18 13:39:35.000 +02:00', '2025-07-18 13:40:35.000 +02:00', '2025-07-18 13:41:35.000 +02:00', '2025-07-18 13:42:35.000 +02:00', '2025-07-18 13:43:35.000 +02:00', '2025-07-18 13:44:35.000 +02:00', '2025-07-18 13:45:35.000 +02:00', '2025-07-18 13:46:35.000 +02:00', '2025-07-18 13:47:35.000 +02:00', '2025-07-18 13:48:35.000 +02:00', '2025-07-18 13:49:35.000 +02:00', '2025-07-18 13:50:35.000 +02:00', '2025-07-18 13:51:35.000 +02:00', '2025-07-18 13:52:35.000 +02:00', '2025-07-18 13:53:35.000 +02:00', '2025-07-18 13:54:35.000 +02:00', '2025-07-18 13:55:35.000 +02:00', '2025-07-18 13:56:35.000 +02:00', '2025-07-18 13:57:35.000 +02:00', '2025-07-18 13:58:35.000 +02:00', '2025-07-18 13:59:35.000 +02:00', '2025-07-18 14:00:35.000 +02:00', '2025-07-18 14:01:35.000 +02:00', '2025-07-18 14:02:35.000 +02:00', '2025-07-18 14:03:35.000 +02:00', '2025-07-18 14:04:35.000 +02:00', '2025-07-18 14:05:35.000 +02:00', '2025-07-18 14:06:35.000 +02:00', '2025-07-18 14:07:35.000 +02:00', '2025-07-18 14:08:35.000 +02:00', '2025-07-18 14:09:35.000 +02:00', '2025-07-18 14:10:35.000 +02:00', '2025-07-18 14:11:35.000 +02:00', '2025-07-18 14:12:35.000 +02:00', '2025-07-18 14:13:35.000 +02:00', '2025-07-18 14:14:35.000 +02:00', '2025-07-18 14:15:35.000 +02:00', '2025-07-18 14:16:35.000 +02:00', '2025-07-18 14:17:35.000 +02:00', '2025-07-18 14:18:35.000 +02:00', '2025-07-18 14:19:35.000 +02:00', '2025-07-18 14:20:35.000 +02:00', '2025-07-18 14:21:35.000 +02:00', '2025-07-18 14:22:35.000 +02:00', '2025-07-18 14:23:35.000 +02:00', '2025-07-18 14:24:35.000 +02:00', '2025-07-18 14:25:35.000 +02:00', '2025-07-18 14:26:35.000 +02:00', '2025-07-18 14:27:35.000 +02:00', '2025-07-18 14:28:35.000 +02:00', '2025-07-18 14:29:35.000 +02:00', '2025-07-18 14:30:35.000 +02:00', '2025-07-18 14:31:35.000 +02:00', '2025-07-18 14:32:35.000 +02:00', '2025-07-18 14:33:35.000 +02:00', '2025-07-18 14:34:35.000 +02:00', '2025-07-18 14:35:35.000 +02:00', '2025-07-18 14:36:35.000 +02:00', '2025-07-18 14:37:35.000 +02:00', '2025-07-18 14:38:35.000 +02:00', '2025-07-18 14:39:35.000 +02:00', '2025-07-18 14:40:35.000 +02:00', '2025-07-18 14:41:35.000 +02:00', '2025-07-18 14:42:35.000 +02:00', '2025-07-18 14:43:35.000 +02:00', '2025-07-18 14:44:35.000 +02:00', '2025-07-18 14:45:35.000 +02:00', '2025-07-18 14:46:35.000 +02:00', '2025-07-18 14:47:35.000 +02:00', '2025-07-18 14:48:35.000 +02:00', '2025-07-18 14:49:35.000 +02:00', '2025-07-18 14:50:35.000 +02:00', '2025-07-18 14:51:35.000 +02:00', '2025-07-18 14:52:35.000 +02:00', '2025-07-18 14:53:35.000 +02:00', '2025-07-18 14:54:35.000 +02:00', '2025-07-18 14:55:35.000 +02:00', '2025-07-18 14:56:35.000 +02:00', '2025-07-18 14:57:35.000 +02:00', '2025-07-18 14:58:35.000 +02:00', '2025-07-18 14:59:35.000 +02:00', '2025-07-18 15:00:35.000 +02:00', '2025-07-18 15:01:35.000 +02:00', '2025-07-18 15:02:35.000 +02:00', '2025-07-18 15:03:35.000 +02:00', '2025-07-18 15:04:35.000 +02:00', '2025-07-18 15:05:35.000 +02:00', '2025-07-18 15:06:35.000 +02:00', '2025-07-18 15:07:35.000 +02:00', '2025-07-18 15:08:35.000 +02:00', '2025-07-18 15:09:35.000 +02:00', '2025-07-18 15:10:35.000 +02:00', '2025-07-18 15:11:35.000 +02:00', '2025-07-18 15:12:35.000 +02:00', '2025-07-18 15:13:35.000 +02:00', '2025-07-18 15:14:35.000 +02:00', '2025-07-18 15:15:35.000 +02:00', '2025-07-18 15:16:35.000 +02:00', '2025-07-18 15:17:35.000 +02:00', '2025-07-18 15:18:35.000 +02:00', '2025-07-18 15:19:35.000 +02:00', '2025-07-18 15:20:35.000 +02:00', '2025-07-18 15:21:35.000 +02:00', '2025-07-18 15:22:35.000 +02:00', '2025-07-18 15:23:35.000 +02:00', '2025-07-18 15:24:35.000 +02:00', '2025-07-18 15:25:35.000 +02:00', '2025-07-18 15:26:35.000 +02:00', '2025-07-18 15:27:35.000 +02:00', '2025-07-18 15:28:35.000 +02:00', '2025-07-18 15:29:35.000 +02:00', '2025-07-18 15:30:35.000 +02:00', '2025-07-18 15:31:35.000 +02:00', '2025-07-18 15:32:35.000 +02:00', '2025-07-18 15:33:35.000 +02:00', '2025-07-18 15:34:35.000 +02:00', '2025-07-18 15:35:35.000 +02:00', '2025-07-18 15:36:35.000 +02:00', '2025-07-18 15:37:35.000 +02:00', '2025-07-18 15:38:35.000 +02:00', '2025-07-18 15:39:35.000 +02:00', '2025-07-18 15:40:35.000 +02:00', '2025-07-18 15:41:35.000 +02:00', '2025-07-18 15:42:35.000 +02:00', '2025-07-18 15:43:35.000 +02:00', '2025-07-18 15:44:35.000 +02:00', '2025-07-18 15:45:35.000 +02:00', '2025-07-18 15:46:35.000 +02:00', '2025-07-18 15:47:35.000 +02:00', '2025-07-18 15:48:35.000 +02:00', '2025-07-18 15:49:35.000 +02:00', '2025-07-18 15:50:35.000 +02:00', '2025-07-18 15:51:35.000 +02:00', '2025-07-18 15:52:35.000 +02:00', '2025-07-18 15:53:35.000 +02:00', '2025-07-18 15:54:35.000 +02:00', '2025-07-18 15:55:35.000 +02:00', '2025-07-18 15:56:35.000 +02:00', '2025-07-18 15:57:35.000 +02:00', '2025-07-18 15:58:35.000 +02:00', '2025-07-18 15:59:35.000 +02:00', '2025-07-18 16:00:35.000 +02:00', '2025-07-18 16:01:35.000 +02:00', '2025-07-18 16:02:35.000 +02:00', '2025-07-18 16:03:35.000 +02:00', '2025-07-18 16:04:35.000 +02:00', '2025-07-18 16:05:35.000 +02:00', '2025-07-18 16:06:35.000 +02:00', '2025-07-18 16:07:35.000 +02:00', '2025-07-18 16:08:35.000 +02:00', '2025-07-18 16:09:35.000 +02:00', '2025-07-18 16:10:35.000 +02:00', '2025-07-18 16:11:35.000 +02:00', '2025-07-18 16:12:35.000 +02:00', '2025-07-18 16:13:35.000 +02:00', '2025-07-18 16:14:35.000 +02:00', '2025-07-18 16:15:35.000 +02:00', '2025-07-18 16:16:35.000 +02:00', '2025-07-18 16:17:35.000 +02:00', '2025-07-18 16:18:35.000 +02:00', '2025-07-18 16:19:35.000 +02:00', '2025-07-18 16:20:35.000 +02:00', '2025-07-18 16:21:35.000 +02:00', '2025-07-18 16:22:35.000 +02:00', '2025-07-18 16:23:35.000 +02:00', '2025-07-18 16:24:35.000 +02:00', '2025-07-18 16:25:35.000 +02:00', '2025-07-18 16:26:35.000 +02:00', '2025-07-18 16:27:35.000 +02:00', '2025-07-18 16:28:35.000 +02:00', '2025-07-18 16:29:35.000 +02:00', '2025-07-18 16:30:35.000 +02:00', '2025-07-18 16:31:35.000 +02:00', '2025-07-18 16:32:35.000 +02:00', '2025-07-18 16:33:35.000 +02:00', '2025-07-18 16:34:35.000 +02:00', '2025-07-18 16:35:35.000 +02:00', '2025-07-18 16:36:35.000 +02:00', '2025-07-18 16:37:35.000 +02:00', '2025-07-18 16:38:35.000 +02:00', '2025-07-18 16:39:35.000 +02:00', '2025-07-18 16:40:35.000 +02:00', '2025-07-18 16:41:35.000 +02:00', '2025-07-18 16:42:35.000 +02:00', '2025-07-18 16:43:35.000 +02:00', '2025-07-18 16:44:35.000 +02:00', '2025-07-18 16:45:35.000 +02:00', '2025-07-18 16:46:35.000 +02:00', '2025-07-18 16:47:35.000 +02:00', '2025-07-18 16:48:35.000 +02:00', '2025-07-18 16:49:35.000 +02:00', '2025-07-18 16:50:35.000 +02:00', '2025-07-18 16:51:35.000 +02:00', '2025-07-18 16:52:35.000 +02:00', '2025-07-18 16:53:35.000 +02:00', '2025-07-18 16:54:35.000 +02:00', '2025-07-18 16:55:35.000 +02:00', '2025-07-18 16:56:35.000 +02:00', '2025-07-18 16:57:35.000 +02:00', '2025-07-18 16:58:35.000 +02:00', '2025-07-18 16:59:35.000 +02:00', '2025-07-18 17:00:35.000 +02:00', '2025-07-18 17:01:35.000 +02:00', '2025-07-18 17:02:35.000 +02:00', '2025-07-18 17:03:35.000 +02:00', '2025-07-18 17:04:35.000 +02:00', '2025-07-18 17:05:35.000 +02:00', '2025-07-18 17:06:35.000 +02:00', '2025-07-18 17:07:35.000 +02:00', '2025-07-18 17:08:35.000 +02:00', '2025-07-18 17:09:35.000 +02:00', '2025-07-18 17:10:35.000 +02:00', '2025-07-18 17:11:35.000 +02:00', '2025-07-18 17:12:35.000 +02:00', '2025-07-18 17:13:35.000 +02:00', '2025-07-18 17:14:35.000 +02:00', '2025-07-18 17:15:35.000 +02:00', '2025-07-18 17:16:35.000 +02:00', '2025-07-18 17:17:35.000 +02:00', '2025-07-18 17:18:35.000 +02:00', '2025-07-18 17:19:35.000 +02:00', '2025-07-18 17:20:35.000 +02:00', '2025-07-18 17:21:35.000 +02:00', '2025-07-18 17:22:35.000 +02:00', '2025-07-18 17:23:35.000 +02:00', '2025-07-18 17:24:35.000 +02:00', '2025-07-18 17:25:35.000 +02:00', '2025-07-18 17:26:35.000 +02:00', '2025-07-18 17:27:35.000 +02:00', '2025-07-18 17:28:35.000 +02:00', '2025-07-18 17:29:35.000 +02:00', '2025-07-18 17:30:35.000 +02:00', '2025-07-18 17:31:35.000 +02:00', '2025-07-18 17:32:35.000 +02:00', '2025-07-18 17:33:35.000 +02:00', '2025-07-18 17:34:35.000 +02:00', '2025-07-18 17:35:35.000 +02:00', '2025-07-18 17:36:35.000 +02:00', '2025-07-18 17:37:35.000 +02:00', '2025-07-18 17:38:35.000 +02:00', '2025-07-18 17:39:35.000 +02:00', '2025-07-18 17:40:35.000 +02:00', '2025-07-18 17:41:35.000 +02:00', '2025-07-18 17:42:35.000 +02:00', '2025-07-18 17:43:35.000 +02:00', '2025-07-18 17:44:35.000 +02:00', '2025-07-18 17:45:35.000 +02:00', '2025-07-18 17:46:35.000 +02:00', '2025-07-18 17:47:35.000 +02:00', '2025-07-18 17:48:35.000 +02:00', '2025-07-18 17:49:35.000 +02:00', '2025-07-18 17:50:35.000 +02:00', '2025-07-18 17:51:35.000 +02:00', '2025-07-18 17:52:35.000 +02:00', '2025-07-18 17:53:35.000 +02:00', '2025-07-18 17:54:35.000 +02:00', '2025-07-18 17:55:35.000 +02:00', '2025-07-18 17:56:35.000 +02:00', '2025-07-18 17:57:35.000 +02:00', '2025-07-18 17:58:35.000 +02:00', '2025-07-18 17:59:35.000 +02:00', '2025-07-18 18:00:35.000 +02:00', '2025-07-18 18:01:35.000 +02:00', '2025-07-18 18:02:35.000 +02:00', '2025-07-18 18:03:35.000 +02:00', '2025-07-18 18:04:35.000 +02:00', '2025-07-18 18:05:35.000 +02:00', '2025-07-18 18:06:35.000 +02:00', '2025-07-18 18:07:35.000 +02:00', '2025-07-18 18:08:35.000 +02:00', '2025-07-18 18:09:35.000 +02:00', '2025-07-18 18:10:35.000 +02:00', '2025-07-18 18:11:35.000 +02:00', '2025-07-18 18:12:35.000 +02:00', '2025-07-18 18:13:35.000 +02:00', '2025-07-18 18:14:35.000 +02:00', '2025-07-18 18:15:35.000 +02:00', '2025-07-18 18:16:35.000 +02:00', '2025-07-18 18:17:35.000 +02:00', '2025-07-18 18:18:35.000 +02:00', '2025-07-18 18:19:35.000 +02:00', '2025-07-18 18:20:35.000 +02:00', '2025-07-18 18:21:35.000 +02:00', '2025-07-18 18:22:35.000 +02:00', '2025-07-18 18:23:35.000 +02:00', '2025-07-18 18:24:35.000 +02:00', '2025-07-18 18:25:35.000 +02:00', '2025-07-18 18:26:35.000 +02:00', '2025-07-18 18:27:35.000 +02:00', '2025-07-18 18:28:35.000 +02:00', '2025-07-18 18:29:35.000 +02:00', '2025-07-18 18:30:35.000 +02:00', '2025-07-18 18:31:35.000 +02:00', '2025-07-18 18:32:35.000 +02:00', '2025-07-18 18:33:35.000 +02:00', '2025-07-18 18:34:35.000 +02:00', '2025-07-18 18:35:35.000 +02:00', '2025-07-18 18:36:35.000 +02:00', '2025-07-18 18:37:35.000 +02:00', '2025-07-18 18:38:35.000 +02:00', '2025-07-18 18:39:35.000 +02:00', '2025-07-18 18:40:35.000 +02:00', '2025-07-18 18:41:35.000 +02:00', '2025-07-18 18:42:35.000 +02:00', '2025-07-18 18:43:35.000 +02:00', '2025-07-18 18:44:35.000 +02:00', '2025-07-18 18:45:35.000 +02:00', '2025-07-18 18:46:35.000 +02:00', '2025-07-18 18:47:35.000 +02:00', '2025-07-18 18:48:35.000 +02:00', '2025-07-18 18:49:35.000 +02:00', '2025-07-18 18:50:35.000 +02:00', '2025-07-18 18:51:35.000 +02:00', '2025-07-18 18:52:35.000 +02:00', '2025-07-18 18:53:35.000 +02:00', '2025-07-18 18:54:35.000 +02:00', '2025-07-18 18:55:35.000 +02:00', '2025-07-18 18:56:35.000 +02:00', '2025-07-18 18:57:35.000 +02:00', '2025-07-18 18:58:35.000 +02:00', '2025-07-18 18:59:35.000 +02:00', '2025-07-18 19:00:35.000 +02:00', '2025-07-18 19:01:35.000 +02:00', '2025-07-18 19:02:35.000 +02:00', '2025-07-18 19:03:35.000 +02:00', '2025-07-18 19:04:35.000 +02:00', '2025-07-18 19:05:35.000 +02:00', '2025-07-18 19:06:35.000 +02:00', '2025-07-18 19:07:35.000 +02:00', '2025-07-18 19:08:35.000 +02:00', '2025-07-18 19:09:35.000 +02:00', '2025-07-18 19:10:35.000 +02:00', '2025-07-18 19:11:35.000 +02:00', '2025-07-18 19:12:35.000 +02:00', '2025-07-18 19:13:35.000 +02:00', '2025-07-18 19:14:35.000 +02:00', '2025-07-18 19:15:35.000 +02:00', '2025-07-18 19:16:35.000 +02:00', '2025-07-18 19:17:35.000 +02:00', '2025-07-18 19:18:35.000 +02:00', '2025-07-18 19:19:35.000 +02:00', '2025-07-18 19:20:35.000 +02:00', '2025-07-18 19:21:35.000 +02:00', '2025-07-18 19:22:35.000 +02:00', '2025-07-18 19:23:35.000 +02:00', '2025-07-18 19:24:35.000 +02:00', '2025-07-18 19:25:35.000 +02:00', '2025-07-18 19:26:35.000 +02:00', '2025-07-18 19:27:35.000 +02:00', '2025-07-18 19:28:35.000 +02:00', '2025-07-18 19:29:35.000 +02:00', '2025-07-18 19:30:35.000 +02:00', '2025-07-18 19:31:35.000 +02:00', '2025-07-18 19:32:35.000 +02:00', '2025-07-18 19:33:35.000 +02:00', '2025-07-18 19:34:35.000 +02:00', '2025-07-18 19:35:35.000 +02:00', '2025-07-18 19:36:35.000 +02:00', '2025-07-18 19:37:35.000 +02:00', '2025-07-18 19:38:35.000 +02:00', '2025-07-18 19:39:35.000 +02:00', '2025-07-18 19:40:35.000 +02:00', '2025-07-18 19:41:35.000 +02:00', '2025-07-18 19:42:35.000 +02:00', '2025-07-18 19:43:35.000 +02:00', '2025-07-18 19:44:35.000 +02:00', '2025-07-18 19:45:35.000 +02:00', '2025-07-18 19:46:35.000 +02:00', '2025-07-18 19:47:35.000 +02:00', '2025-07-18 19:48:35.000 +02:00', '2025-07-18 19:49:35.000 +02:00', '2025-07-18 19:50:35.000 +02:00', '2025-07-18 19:51:35.000 +02:00', '2025-07-18 19:52:35.000 +02:00', '2025-07-18 19:53:35.000 +02:00', '2025-07-18 19:54:35.000 +02:00', '2025-07-18 19:55:35.000 +02:00', '2025-07-18 19:56:35.000 +02:00', '2025-07-18 19:57:35.000 +02:00', '2025-07-18 19:58:35.000 +02:00', '2025-07-18 19:59:35.000 +02:00', '2025-07-18 20:00:35.000 +02:00', '2025-07-18 20:01:35.000 +02:00', '2025-07-18 20:02:35.000 +02:00', '2025-07-18 20:03:35.000 +02:00', '2025-07-18 20:04:35.000 +02:00', '2025-07-18 20:05:35.000 +02:00', '2025-07-18 20:06:35.000 +02:00', '2025-07-18 20:07:35.000 +02:00', '2025-07-18 20:08:35.000 +02:00', '2025-07-18 20:09:35.000 +02:00', '2025-07-18 20:10:35.000 +02:00', '2025-07-18 20:11:35.000 +02:00', '2025-07-18 20:12:35.000 +02:00', '2025-07-18 20:13:35.000 +02:00', '2025-07-18 20:14:35.000 +02:00', '2025-07-18 20:15:35.000 +02:00', '2025-07-18 20:16:35.000 +02:00', '2025-07-18 20:17:35.000 +02:00', '2025-07-18 20:18:35.000 +02:00', '2025-07-18 20:19:35.000 +02:00', '2025-07-18 20:20:35.000 +02:00', '2025-07-18 20:21:35.000 +02:00', '2025-07-18 20:22:35.000 +02:00', '2025-07-18 20:23:35.000 +02:00', '2025-07-18 20:24:35.000 +02:00', '2025-07-18 20:25:35.000 +02:00', '2025-07-18 20:26:35.000 +02:00', '2025-07-18 20:27:35.000 +02:00', '2025-07-18 20:28:35.000 +02:00', '2025-07-18 20:29:35.000 +02:00', '2025-07-18 20:30:35.000 +02:00', '2025-07-18 20:31:35.000 +02:00', '2025-07-18 20:32:35.000 +02:00', '2025-07-18 20:33:35.000 +02:00', '2025-07-18 20:34:35.000 +02:00', '2025-07-18 20:35:35.000 +02:00', '2025-07-18 20:36:35.000 +02:00', '2025-07-18 20:37:35.000 +02:00', '2025-07-18 20:38:35.000 +02:00', '2025-07-18 20:39:35.000 +02:00', '2025-07-18 20:40:35.000 +02:00', '2025-07-18 20:41:35.000 +02:00', '2025-07-18 20:42:35.000 +02:00', '2025-07-18 20:43:35.000 +02:00', '2025-07-18 20:44:35.000 +02:00', '2025-07-18 20:45:35.000 +02:00', '2025-07-18 20:46:35.000 +02:00', '2025-07-18 20:47:35.000 +02:00', '2025-07-18 20:48:35.000 +02:00', '2025-07-18 20:49:35.000 +02:00', '2025-07-18 20:50:35.000 +02:00', '2025-07-18 20:51:35.000 +02:00', '2025-07-18 20:52:35.000 +02:00', '2025-07-18 20:53:35.000 +02:00', '2025-07-18 20:54:35.000 +02:00', '2025-07-18 20:55:35.000 +02:00', '2025-07-18 20:56:35.000 +02:00', '2025-07-18 20:57:35.000 +02:00', '2025-07-18 20:58:35.000 +02:00', '2025-07-18 20:59:35.000 +02:00', '2025-07-18 21:00:35.000 +02:00', '2025-07-18 21:01:35.000 +02:00', '2025-07-18 21:02:35.000 +02:00', '2025-07-18 21:03:35.000 +02:00', '2025-07-18 21:04:35.000 +02:00', '2025-07-18 21:05:35.000 +02:00', '2025-07-18 21:06:35.000 +02:00', '2025-07-18 21:07:35.000 +02:00', '2025-07-18 21:08:35.000 +02:00', '2025-07-18 21:09:35.000 +02:00', '2025-07-18 21:10:35.000 +02:00', '2025-07-18 21:11:35.000 +02:00', '2025-07-18 21:12:35.000 +02:00', '2025-07-18 21:13:35.000 +02:00', '2025-07-18 21:14:35.000 +02:00', '2025-07-18 21:15:35.000 +02:00', '2025-07-18 21:16:35.000 +02:00', '2025-07-18 21:17:35.000 +02:00', '2025-07-18 21:18:35.000 +02:00', '2025-07-18 21:19:35.000 +02:00', '2025-07-18 21:20:35.000 +02:00', '2025-07-18 21:21:35.000 +02:00', '2025-07-18 21:22:35.000 +02:00', '2025-07-18 21:23:35.000 +02:00', '2025-07-18 21:24:35.000 +02:00', '2025-07-18 21:25:35.000 +02:00', '2025-07-18 21:26:35.000 +02:00', '2025-07-18 21:27:35.000 +02:00', '2025-07-18 21:28:35.000 +02:00', '2025-07-18 21:29:35.000 +02:00', '2025-07-18 21:30:35.000 +02:00', '2025-07-18 21:31:35.000 +02:00', '2025-07-18 21:32:35.000 +02:00', '2025-07-18 21:33:35.000 +02:00', '2025-07-18 21:34:35.000 +02:00', '2025-07-18 21:35:35.000 +02:00', '2025-07-18 21:36:35.000 +02:00', '2025-07-18 21:37:35.000 +02:00', '2025-07-18 21:38:35.000 +02:00', '2025-07-18 21:39:35.000 +02:00', '2025-07-18 21:40:35.000 +02:00', '2025-07-18 21:41:35.000 +02:00', '2025-07-18 21:42:35.000 +02:00', '2025-07-18 21:43:35.000 +02:00', '2025-07-18 21:44:35.000 +02:00', '2025-07-18 21:45:35.000 +02:00', '2025-07-18 21:46:35.000 +02:00', '2025-07-18 21:47:35.000 +02:00', '2025-07-18 21:48:35.000 +02:00', '2025-07-18 21:49:35.000 +02:00', '2025-07-18 21:50:35.000 +02:00', '2025-07-18 21:51:35.000 +02:00', '2025-07-18 21:52:35.000 +02:00', '2025-07-18 21:53:35.000 +02:00', '2025-07-18 21:54:35.000 +02:00', '2025-07-18 21:55:35.000 +02:00', '2025-07-18 21:56:35.000 +02:00', '2025-07-18 21:57:35.000 +02:00', '2025-07-18 21:58:35.000 +02:00', '2025-07-18 21:59:35.000 +02:00', '2025-07-18 22:00:35.000 +02:00', '2025-07-18 22:01:35.000 +02:00', '2025-07-18 22:02:35.000 +02:00', '2025-07-18 22:03:35.000 +02:00', '2025-07-18 22:04:35.000 +02:00', '2025-07-18 22:05:35.000 +02:00', '2025-07-18 22:06:35.000 +02:00', '2025-07-18 22:07:35.000 +02:00', '2025-07-18 22:08:35.000 +02:00', '2025-07-18 22:09:35.000 +02:00', '2025-07-18 22:10:35.000 +02:00', '2025-07-18 22:11:35.000 +02:00', '2025-07-18 22:12:35.000 +02:00', '2025-07-18 22:13:35.000 +02:00', '2025-07-18 22:14:35.000 +02:00', '2025-07-18 22:15:35.000 +02:00', '2025-07-18 22:16:35.000 +02:00', '2025-07-18 22:17:35.000 +02:00', '2025-07-18 22:18:35.000 +02:00', '2025-07-18 22:19:35.000 +02:00', '2025-07-18 22:20:35.000 +02:00', '2025-07-18 22:21:35.000 +02:00', '2025-07-18 22:22:35.000 +02:00', '2025-07-18 22:23:35.000 +02:00', '2025-07-18 22:24:35.000 +02:00', '2025-07-18 22:25:35.000 +02:00', '2025-07-18 22:26:35.000 +02:00', '2025-07-18 22:27:35.000 +02:00'], '2025-07-18 11:07:35.000 +02:00', '', '')\n"
     ]
    }
   ],
   "source": [
    "print(available_timestamps)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "b9d6825a",
   "metadata": {},
   "outputs": [],
   "source": [
    "s3s.SetCurrentTimeStamp('2025-07-18 11:08:35.000 +02:00')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "b10b0a5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2025-07-18 11:08:35.000 +02:00'"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3s.GetCurrentTimeStamp() #Check whether change worked"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "942e54c9",
   "metadata": {},
   "source": [
    "## GetResultValue()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e6e954a",
   "metadata": {},
   "source": [
    "Now we can obtain the pressure value for one of our nodes at two different timestamps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "b3e5f147",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2025-07-18 11:08:35.000 +02:00'"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3s.GetCurrentTimeStamp()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "a7875f26",
   "metadata": {},
   "outputs": [],
   "source": [
    "pressure1=s3s.GetResultValue(tk_of_interest, 'P')[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "31017130",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6.505175\n"
     ]
    }
   ],
   "source": [
    "print(pressure1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37e39cb2",
   "metadata": {},
   "source": [
    "Move forward by three minutes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "7751ee4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "s3s.SetCurrentTimeStamp('2025-07-18 11:11:35.000 +02:00')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "9ab370b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2025-07-18 11:11:35.000 +02:00'"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3s.GetCurrentTimeStamp() #Check whether change worked"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "2a353a1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "pressure2=s3s.GetResultValue(tk_of_interest, 'P')[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "3ff5a7e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8.001184\n"
     ]
    }
   ],
   "source": [
    "print(pressure2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "d1808285",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Difference in Pressure 11:08 to 11:11: -1.496009\n"
     ]
    }
   ],
   "source": [
    "print(f\"Difference in Pressure 11:08 to 11:11: {float(pressure1)-float(pressure2)}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d0386e3",
   "metadata": {},
   "source": [
    "We determined a pressure drop between the two timestamps."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0362f6b6",
   "metadata": {},
   "source": [
    "Now follows: Tutorial 5: ..."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
