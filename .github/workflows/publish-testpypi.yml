# .github/workflows/publish-testpypi.yml

name: Publish Python distribution to TestPyPI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # optional: nur auf Versions-Tags reagieren
    paths:
      - 'pyproject.toml'
      - 'setup.py'
      - 'requirements.txt'
      - 'src/**'
      - '.github/workflows/publish-testpypi.yml'

jobs:
  build-and-publish:
    name: Build and publish package
    runs-on: windows-latest  # Windows Runner statt Ubuntu

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: (Optional) Install dev dependencies
        run: |
          pip install .[dev]

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Build package using pyproject.toml
        run: python -m build
      
      - name: Debug TWINE_PASSWORD (nur zum Testen, nicht in Produktion!)
        run: echo "TWINE_PASSWORD ist gesetzt"
        if: env.TWINE_PASSWORD != ''
        env:
          TWINE_PASSWORD: ${{ secrets.MF3S_TEST_PYPI_TOKEN }}

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.MF3S_TEST_PYPI_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.MF3S_PYPI_TOKEN }}
        run: |
          twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
